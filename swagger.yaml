swagger: "2.0"
info:
  description: "Control inventary products"
  version: "1.0.0"
  title: "Products"
host: "localhost:8080"
basePath: "/"
tags:
- name: "Product"
  description: ""
schemes:
- "http"

paths:
  /products:
    get:
      tags:
      - "Product"
      summary: "Returns all products"
      operationId: "getProducts"
      produces:
      - "application/json"
      parameters:
        - name: "keywords"
          in: "query"
          description: "Status values that need to be considered for filter"
          required: false
          type: "string"
      responses: 
        200:
          description: "Ok"
          schema: 
            $ref: "#/definitions/ListOfProducts"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorBadRequestResponse"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorNotFoundResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorInternalServerResponse"
            
  /product:
    post:
      tags:
      - "Product"
      summary: "Create an Product"
      operationId: "createProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "product"
        description: "Create a new Product"
        required: true
        schema:
          $ref: "#/definitions/ProductSkuRequest"
      responses:
        200:
          description: "created"
          schema:
            $ref: "#/definitions/ProductResponse"
        400:
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ErrorBadRequestResponse"
        404:
          description: "Not Found"
          schema:
            $ref: "#/definitions/ErrorNotFoundResponse"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/ErrorInternalServerResponse"
            
        
          
  /product/{sku}/stock/reserve:
    post:
      tags:
      - "Product"
      summary: "Update an existing product"
      description: "Update an existing product"
      operationId: "reserveProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "path"
        description: "reserve that need to be update"
        required: true
        type: "number"
      - in: "body" 
        name: "body"
        description: "Product object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/ReserveProductRequest"
      responses:
        "204":
          description: "succesful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"
  
  /product/stock/cancelReserve:
    post:
      tags:
      - "Product"
      summary: "Cancel booking"
      description: "Cancel booking"
      operationId: "cancelReserve"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/CancelReserveProductRequest"
      responses:
        "204":
          description: "succesful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"
          
  /product/{sku}:
    get:
      tags:
      - "Product"
      summary: "Find by sku"
      description: "Find by sku"
      operationId: "getProductSku"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "path"
        description: "Product sku number"
        required: true
        type: number
        
      responses:
        "200":
          description: "succesful operation"
          schema:
            $ref: "#/definitions/ProductResponse"
        "400": 
          description: "Invalid SKU supplied"
        "404":
          description: "Product not found"
    put:
      tags:
      - "Product"
      summary: "Update by sku"
      description: "Update by sku"
      operationId: "putProductSku"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "path"
        description: "Product sku number"
        required: true
        type: "number"
      - in: "body"
        name: "body"
        description: "Updated sku product"
        required: true
        schema:
          $ref: "#/definitions/ProductSkuRequest"
      responses:
        "200":
          description: "succesful operation"
          schema:
            $ref: "#/definitions/ProductResponse"
        "400":
          description: "Invalid user supplied"
        "404":
          description: "User not found"
    delete:
      tags:
        - "Product"
      summary: "Delete a product"
      description: "Delete a product"
      operationId: "deleteProduct"
      produces:
        - "application.json"
      parameters:
      - name: "sku"
        in: "path"
        required: true
        type: "number"
      responses:
        "200":
          description: "succesful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"

  /product/bulk:
    post:
      tags:
        - "Product"
      summary: "Load massively"
      description: "Load massively"
      operationId: "bulkProduct"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Product object list"
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ListOfProducts"
      responses:
        "204":
          description: "succesful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Product not found"
        "405":
          description: "Validation exception"

definitions:
  ProductSkuRequest:
    type: "object"
    required:
      - "sku"
      - "name"
      - "description"
      - "keywords"
      - "price"
      - "imgUrl"
      - "unitAvailable"
      - "weight"
      - "category"
      - "brand"
      - "uom"
    properties: 
      sku:
        type: "string"
        example: "1234EA8378I2"
      name:
        type: "string"
        example: "Notebook Bangho MAX L4 i1"
      description:
        type: "string"
        example: "Intel Celeron N4000 4GB RAM 120GB SSD, Intel UHD Graphics 600 1366x768px Windows 10 Home"
      keywords:
        type: "array"
        items:
          type: "string"
      price:
        type: "number"
        example: 3000
      imgUrl:
        type: "string"
        example: "/url"
      unitAvailable:
        type: "number"
        example: 35
      weight:
        type: "number"
        format: "doble"
        example: "55"
      category:
        type: "string"
        example: "technology"
      brand:
        type: "string"
        example: "Bangho"
  

  
  KeywordResponse:
    type: "object"
    required:
      - "keywordId"
      - "name"
    properties: 
      keywordId:
        type: "string"
        example: "GEV5343FDG"
      name:
        type: "array"
        example: "computadora,hp,3GB"
        items:
          type: "string"
        
  
  ProductResponse:
    type: "object"
    properties: 
      productId:
        type: "string"
      sku:
        type: "string"
      name:
        type: "string"
      description:
        type: "string"
      keywords:
        type: "array"
        items:
          $ref: "#/definitions/KeywordResponse"
      price:
        type: "number"
      imgUrl:
        type: "string"
      unitAvailable:
        type: "number"
      weight:
        type: "number"
        format: "doble"
      category:
        type: "string"
      brand:
        type: "string"
  
  ReserveProductRequest:
    type: "object"
    properties: 
      amountToReserve:
        type: "number"
        
  CancelReserveProductRequest:      
    type: "array"
    items:
      $ref: "#/definitions/CancelReserve"
      
  CancelReserve:
    properties: 
      sku:
        type: "string"
      amountToCancel:
        type: "number"    
        
  ListOfProducts:
    type: "array"
    items:
      $ref: "#/definitions/ProductSkuRequest"
      
  ErrorNotFoundResponse:
    type: "object"
    properties:
      code:
        type: "string"
        example: "GENERIC_NOT_FOUND"
      message:
        type: "string"
        example: "Resource Not Found"
      result:
        type: "string"
        example: "GENERIC_NOT_FOUND"
        
  ErrorBadRequestResponse:
    type: "object"
    properties:
      code:
        type: "string"
        example: "GENERIC_BAD_REQUEST"
      message:
        type: "string"
        example: "Invalid Request"
      result:
        type: "string"
        example: "GENERIC_NOT_FOUND"
        
  ErrorInternalServerResponse:
    type: "object"
    properties:
      code:
        type: "string"
        example: "GENERIC_INTERNAL_SERVER_ERROR"
      message:
        type: "string"
        example: "Internal Server Error"
      result:
        type: "string"
        example: "GENERIC_INTERNAL_SERVER_ERROR"